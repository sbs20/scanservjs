name: docker

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # runs daily at 00:00

  release:
    types: [published]

env:
  BUILD_TARGET: scanservjs-core
  BUILD_PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-platform build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/scanservjs
            ghcr.io/${{ github.repository_owner }}/scanservjs
          tags: |
            type=schedule,pattern=staging
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: New commit count
        run: echo "NEW_COMMIT_COUNT=$(git log --oneline --since '24 hours ago' | wc -l)" >> $GITHUB_ENV

      - name: Push nightly staging
        if: github.ref == 'refs/heads/master' && env.NEW_COMMIT_COUNT > 0
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          target: ${{ env.BUILD_TARGET }}
          platforms: ${{ env.BUILD_PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          target: ${{ env.BUILD_TARGET }}
          platforms: ${{ env.BUILD_PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
